% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{check.numeric}
\alias{check.numeric}
\title{Check whether a character could be safely convert to numeric}
\usage{
check.numeric(
  v = NULL,
  na.rm = FALSE,
  only.integer = FALSE,
  exceptions = c(""),
  ignore.whitespace = TRUE
)
}
\arguments{
\item{v}{The character vector or factor vector. (Mandatory)}

\item{na.rm}{logical. Should the function ignore NA? Default value is FLASE since NA can be
converted to numeric. (Optional)}

\item{only.integer}{logical. Only check for integers and do not accept floating point. Default
value is FALSE. (Optional)}

\item{exceptions}{A character vector containing the strings that should be considered as valid to
be converted to numeric. (Optional)}

\item{ignore.whitespace}{logical. Ignore leading and tailing whitespace characters before
assessing if the vector can be converted to numeric. Default value is TRUE. (Optional)}
}
\value{
vector which could be safely as.numeric \?
}
\description{
A function to assess if a vector can be interpreted as numbers. Code copied from
  varhandle::check.numeric.
}
\details{
This function checks if it is safe to convert the vector to numeric and this conversion
  will not end up in producing NA. In nutshell this function tries to mak sure provided vector
  contains numbers but in a non-numeric class. see example for better understanding. This
  function can be configured to only accept integer numbers (by setting the argument only.integer
  to TRUE).

  It can also ignore NA values (na.rm argument) and ignore heading/tailing whitespaces
  (ignore.whitespace argument).

  There is also room to manually define exceptions to be concidered
  as numbers (exceptions argument).
}
