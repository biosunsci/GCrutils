% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/io.R
\name{yslice}
\alias{yslice}
\title{Slice a iterable like `[:]` in a python indexing style}
\usage{
yslice(iterable, seqs = NULL, .style_negative_index = "py")
}
\arguments{
\item{iterable}{vector or list}
}
\value{
sliced iterable
}
\description{
slice a iterable like `[:]`, but use a python-like style, negative-n means the
  last-n-th(python style) but not drop the n-th(R style)
}
\details{
if .style_negative_index == 'py' (default) negative values will be treated as to get the
  last N like python does except index is from 1 to length(@iterable) and the end of @seqs is
  included, too if .style_negative_index == 'r' (optional) negative values will be treated as to
  remove those at the positive position just like in r code []
}
\examples{
\dontrun{
a = c(0,1,2,3,'b')
a \%>\% yslice(-1) # 'b'
a \%>\% yslice(-3:-1) # c('2','3','b')
a \%>\% yslice(1:3) # c('0','1','2')
a \%>\% yslice(3) #  c('2','3','b')
}
}
